---
- name: 'Configurar Múltiples Interfaces, Guardar y Reiniciar Red'
  hosts: all
  gather_facts: false

  tasks:
    - name: '1. Aplicar configuración a cada interfaz especificada'
      loop: "{{ changes | default([]) }}"
      loop_control:
        loop_var: iface_config
      when: iface_config.device == inventory_hostname
      ansible.builtin.raw: |
        #!/bin/sh
        # ============================================================================
        # == SCRIPT MODIFICADO PARA SOPORTAR OPERACIONES EN LOTE (CORREGIDO)        ==
        # ============================================================================
        
        # La lógica para encontrar la sección UCI no se ve afectada
        if echo "{{ iface_config.iface_name }}" | grep -q '^br-'; then
          TARGET_SECTION=$(echo "{{ iface_config.iface_name }}" | sed 's/^br-//')
        else
          TARGET_SECTION="{{ iface_config.iface_name }}"
        fi

        if ! uci show "network.$TARGET_SECTION" >/dev/null 2>&1; then
          echo "ERROR: La seccion UCI derivada '$TARGET_SECTION' no existe para la interfaz '{{ iface_config.iface_name }}' en {{ inventory_hostname }}." >&2
          exit 1
        fi
        
        ### FIX: VULNERABILITY #2 (DEFENSE-IN-DEPTH) ###
        # Usamos el filtro 'quote' para escapar de forma segura las variables IP y MASK.
        # Esto previene que metacaracteres de shell sean interpretados.
        uci set "network.$TARGET_SECTION.proto=static"
        uci set "network.$TARGET_SECTION.ipaddr={{ iface_config.ip | quote }}"
        uci set "network.$TARGET_SECTION.netmask={{ iface_config.mask | quote }}"
        
        uci commit network
        
        echo "OK: Configuracion para {{ iface_config.iface_name }} aplicada y guardada en la seccion '$TARGET_SECTION'."
        exit 0
      register: config_result
      changed_when: "'OK:' in config_result.stdout"
      failed_when: config_result.rc != 0

    - name: '2. Reiniciar el servicio de red para aplicar TODOS los cambios'
      ansible.builtin.raw: /etc/init.d/network restart
      ignore_errors: true

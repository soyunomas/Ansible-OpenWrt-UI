---
- name: Configurar parametros WiFi (SSID, Cifrado, Contraseña)
  hosts: all
  gather_facts: false

  tasks:
    - name: Aplicar configuracion a cada radio especificada
      loop: "{{ radios | default([]) }}"
      loop_control:
        loop_var: radio
      when: radio.device == inventory_hostname
      ansible.builtin.raw: |
        #!/bin/sh
        # ==============================================================================
        # == Script para configurar una interfaz WiFi de forma segura (CORREGIDO)    ==
        # ==============================================================================
        
        ### FIX: BUG FIX ###
        # La variable 'radio.index' ahora contiene el NOMBRE de la sección (ej: 'default_radio0').
        # La lógica se adapta para trabajar con secciones con nombre en lugar de índices numéricos.
        SECTION_NAME='{{ radio.index }}'
        
        # La comprobación de existencia ahora usa el nombre de la sección directamente.
        if ! uci show "wireless.$SECTION_NAME" >/dev/null 2>&1; then
          echo "ERROR: La sección WiFi con nombre '$SECTION_NAME' no existe en {{ inventory_hostname }}." >&2
          exit 1
        fi

        echo "Configurando sección '$SECTION_NAME' en {{ inventory_hostname }}..."
        
        ### SECURITY FIX REMAINS ###
        # Usamos el filtro 'quote' para escapar de forma segura las variables.
        # Ahora se aplica la configuración a la sección con nombre 'wireless.SECTION_NAME'.
        uci set "wireless.$SECTION_NAME.ssid={{ radio.ssid | quote }}"
        uci set "wireless.$SECTION_NAME.encryption={{ radio.encryption | quote }}"
        
        # Solo establecer la clave si el cifrado no es 'none' (abierto)
        if [ "{{ radio.encryption }}" != "none" ]; then
          uci set "wireless.$SECTION_NAME.key={{ radio.key | quote }}"
        else
          # Si el cifrado es 'none', eliminamos la clave por seguridad.
          uci delete "wireless.$SECTION_NAME.key"
        fi
        
        # Guardar los cambios de la seccion 'wireless'
        uci commit wireless
        
        echo "OK: Configuracion para SSID {{ radio.ssid | quote }} aplicada y guardada en la sección '$SECTION_NAME'."
        exit 0
      register: uci_result
      changed_when: "'OK:' in uci_result.stdout"
      failed_when: uci_result.rc != 0

    - name: Reiniciar el servicio WiFi para aplicar todos los cambios
      ansible.builtin.raw: wifi reload
      register: reload_result
      changed_when: reload_result.rc == 0
